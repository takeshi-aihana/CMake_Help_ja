CMake 変数の :variable:`CMAKE_FIND_ROOT_PATH` には、全ての検索ディレクトリの前に追加する1つ以上のディレクトリを指定します。
これの変数により、指定したディレクトリでの検索が再構成（re-root）されて効率の良い検索ディレクトリの集合になります。
この時、CMake 変数 :variable:`CMAKE_STAGING_PREFIX` の配下のディレクトリは、常にホストシステム上のパスであるため、再構成した検索ディレクトリからは除外されます。
なお :variable:`CMAKE_FIND_ROOT_PATH` のデフォルトは空です。

CMake 変数の :variable:`CMAKE_SYSROOT` を使って ``<prefix>`` として使用するディレクトリを1つだけ指定することもできます。
この :variable:`CMAKE_SYSROOT` 変数には、他に別の効果があります。
詳細は、この変数のドキュメントを参照して下さい。

これらの CMake 変数は、特にクロス・コンパイルする際に便利です。例えばターゲット環境の root ディレクトリをセットしておくと、CMake はそのディレクトリも検索します。
デフォルトは、最初に CMake 変数の :variable:`CMAKE_FIND_ROOT_PATH` に :ref:`リスト <CMake Language Lists>` されたディレクトリからファイルを探したあと、:variable:`CMAKE_SYSROOT` 変数が指すディレクトリを検索し、最後に再構成されていないその他のディレクトリを検索します。
デフォルトの処理は CMake 変数の |CMAKE_FIND_ROOT_PATH_MODE_XXX| を設定することで調整できます。
また、次にあげるオプションを使って、この処理を呼び出すたびに変更できます：

``CMAKE_FIND_ROOT_PATH_BOTH``
  この上で説明した順番（:variable:`CMAKE_FIND_ROOT_PATH` -> :variable:`CMAKE_SYSROOT` -> その他のディレクトリ）で検索する。

``NO_CMAKE_FIND_ROOT_PATH``
  :variable:`CMAKE_FIND_ROOT_PATH` 変数のディレクトリは無視する。

``ONLY_CMAKE_FIND_ROOT_PATH``
  再構成されたディレクトリと :variable:`CMAKE_STAGING_PREFIX` 以下のディレクトリだけ検索する。
